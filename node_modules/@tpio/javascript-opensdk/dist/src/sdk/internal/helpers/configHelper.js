"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const logger_1 = __importDefault(require("../../../logger/logger"));
const exceptions_1 = __importDefault(require("../../exceptions"));
class ConfigHelper {
    static agentServiceAddress() {
        let address = process.env.TP_AGENT_URL;
        if (!address) {
            logger_1.default.info('No Agent service address found in TP_AGENT_URL environment variable');
            logger_1.default.info('Defaulting to http://127.0.0.1:8585 (localhost)');
            return 'http://127.0.0.1:8585';
        }
        address = address.replace('localhost', '127.0.0.1');
        return address;
    }
    static developerToken() {
        const token = process.env.TP_DEV_TOKEN;
        if (!token) {
            logger_1.default.error('No developer token was found, did you set it in the TP_DEV_TOKEN environment variable?');
            logger_1.default.error('You can get a developer token from https://app.testproject.io/#/integrations/sdk');
            throw new exceptions_1.default.SdkException('No development token defined in TP_DEV_TOKEN environment variable');
        }
        return token;
    }
    static sdkVersion() {
        var _a;
        return (_a = process.env.TP_SDK_VERSION) !== null && _a !== void 0 ? _a : '0.0.0';
    }
}
exports.default = ConfigHelper;
