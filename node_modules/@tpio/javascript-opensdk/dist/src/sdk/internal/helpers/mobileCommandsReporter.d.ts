import { Client } from 'webdriver';
import AgentClient from '../agent/agentClient';
import Reporter from '../../reporter/reporter';
export default class MobileCommandsReporter {
    private agentClient;
    private reporter;
    private driverClient?;
    private latestKnownTestName;
    private skipDriverCommandReporting;
    constructor(agentClient: AgentClient, reporter: Reporter);
    setDriverClient(driverClient: Client): void;
    private reportError;
    reportDriverCommand(commandName: string, data: {
        body: unknown;
        result: {
            value: unknown;
        };
    }, resolve: (value: unknown) => void, reject: (value: unknown) => void): Promise<void>;
    reportElementCommand(commandName: string, data: {
        body: unknown;
        result: {
            value: unknown;
        };
    }, elementId: string, resolve: (value: unknown) => void, reject: (value: unknown) => void): Promise<void>;
    reportTest(force?: boolean): void;
    reportDriverCommandWrapper(commandName: string, fn: Function): Function;
    reportElementCommandWrapper<T>(commandName: string, elementId: string, fn: Function): Promise<T>;
}
