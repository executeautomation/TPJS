import { Executor } from 'selenium-webdriver/http';
import { Capabilities, Command } from 'selenium-webdriver';
import AgentClient from '../agent/agentClient';
import Reporter from '../../reporter/reporter';
import SleepTimingType from '../../../enums/sleepTimingType';
export default class CustomHttpCommandExecutor extends Executor {
    readonly agentClient: AgentClient;
    readonly reporter: Reporter;
    private driverSessionId;
    private httpClient;
    private latestKnownTestName;
    private excludedTestNames;
    private disableRedaction;
    private isWebdriverWait;
    private settings;
    private stashedCommand?;
    private w3c;
    private static readonly NON_REPORTED_COMMANDS;
    constructor(capabilities: Capabilities);
    execute(command: Command, skipReporting?: boolean): Promise<unknown>;
    updateKnownTestName(): void;
    reportCommand(command: Command, result: unknown, passed: boolean): Promise<void>;
    reportTest(): void;
    private getScreenshot;
    private handleTimeOut;
    static handleSleep(sleep_timing_type: SleepTimingType, sleep_time: number, command: Command, step_executed?: boolean): Promise<void>;
    get sessionId(): string;
}
